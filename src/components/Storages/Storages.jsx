import React from 'react';
import Code from "../Code/Code";
import {
    codeGetCookie,
    codeGetLocalStorageData,
    codeDeleteCookie,
    codeSetLocalStorageData,
    codeSetupCookie
} from "./code_examples";

const Storages = () => {
    return (
        <div>
            <h1>STORAGEs</h1>
            <div className='content'>
                <h3>Local Storage</h3>
                <p>
                    <b>Local Storage</b> - это механизм, который позволяет веб-приложениям сохранять данные локально в
                    браузере. Это означает, что данные будут сохранены после закрытия браузера и перезагрузки страницы.
                </p>
                <p>
                    <b>LocalStorage</b> может быть использован для хранения различных типов данных, таких как строки,
                    числа, булевы
                    значения и объекты. Он может быть полезен для хранения пользовательских настроек (например темная
                    тема
                    на сайте), предпочтений пользователя и других данных, которые могут быть использованы для
                    персонализации
                    пользовательского опыта.
                </p>
                <p>
                    Для записи данных в LocalStorage можно использовать localStorage объекта <b>window</b> в JavaScript.
                    Например, чтобы записать строку "Hello, Redev!" в LocalStorage, можно использовать:
                </p>
                <Code code={codeSetLocalStorageData}/>
                <p>
                    Чтобы получить данные из LocalStorage, можно использовать метод <b>getItem()</b> объекта
                    localStorage.
                    Например, чтобы получить значение, которое мы только что записали, можно использовать следующий код:
                </p>
                <Code code={codeGetLocalStorageData}/>
                <p>
                    Данные в LocalStorage хранятся в виде строк. При необходимости данные могут быть преобразованы в
                    другие типы данных с помощью методов JavaScript, например <b>parseInt()</b> или <b>JSON.parse()</b>.
                </p>
                <p>
                    LocalStorage является безопасным механизмом хранения данных, поскольку данные сохраняются локально
                    на
                    компьютере пользователя и не передаются на сервер. Это также означает, что данные хранятся в
                    пределах ограниченного объема памяти, доступного для браузера.
                </p>
                <p>
                    Использование LocalStorage может улучшить пользовательский опыт, позволяя сохранять данные между
                    визитами на сайт.
                </p>
                <h3>Использование Cookies в React приложениях</h3>
                <p>
                    <b>Cookies</b> - это небольшие текстовые файлы, которые веб-сайты отправляют и хранят на компьютере
                    пользователя через его веб-браузер. Они представляют собой удобный механизм для хранения небольших
                    данных, связанных с пользователем и веб-сайтом. В контексте React приложений, cookies могут быть
                    использованы для сохранения состояния приложения и обеспечения персонализации.
                </p>
                <h3>Зачем нужно хранилище в виде Cookies?</h3>
                <ol>
                    <li>
                        <b>Сохранение состояния</b>: Cookies позволяют хранить небольшие объемы данных, такие как
                        пользовательские настройки, предпочтения, идентификаторы сессий и другие данные, которые нужно
                        сохранить между различными запросами или сеансами пользователей.
                    </li>
                    <li>
                        <b>Аутентификация и авторизация</b>: Cookies могут использоваться для хранения токенов
                        аутентификации,
                        позволяя пользователю оставаться аутентифицированным в приложении даже после перезапуска
                        браузера.
                    </li>
                    <li>
                        <b>Персонализация и отслеживание</b>: Cookies могут использоваться для анализа поведения
                        пользователя
                        на сайте и предоставления персонализированного опыта. Например, рекомендации товаров, основанные
                        на предыдущих покупках.
                    </li>
                </ol>
                <h3>Отличия от LocalStorage</h3>
                <ol>
                    <li>
                        <b>Емкость данных</b>: Cookies могут содержать до 4KB данных, в то время как Local Storage
                        позволяет
                        хранить около 5MB данных.
                    </li>
                    <li>
                        <b>Срок хранения</b>: Cookies имеют срок хранения, который можно указать, в то время как данные
                        в Local
                        Storage хранятся неограниченное время, пока их явно не удалить.
                    </li>
                    <li>
                        <b>Передача данных</b>: Cookies автоматически включаются в заголовки каждого HTTP-запроса к
                        определенному домену, что делает их более подходящими для некоторых сценариев, таких как
                        авторизация. Local Storage данные не автоматически передаются с каждым запросом.
                    </li>
                </ol>
                <h3>Работа с Cookies в React</h3>
                <p>
                    В React приложениях можно работать с cookies, используя JavaScript API для работы с ними или же
                    библиотеку → <a href='https://www.npmjs.com/package/cookie'
                                  target={"_blank"}>https://www.npmjs.com/package/cookie</a>.
                </p>
                <p><b>Установка Cookie:</b></p>
                <Code code={codeSetupCookie}/>
                <p><b>Получение Cookie:</b></p>
                <Code code={codeGetCookie}/>
                <p><b>Удаление Cookie:</b></p>
                <Code code={codeDeleteCookie}/>
                <p>
                    <b>Cookies</b> - это удобный механизм хранения небольших данных на стороне клиента, который можно
                    использовать в React приложениях для сохранения состояния, аутентификации и персонализации. Однако
                    стоит помнить о его ограничениях, таких как ограниченный объем данных и срок хранения. При выборе
                    между Cookies и Local Storage важно учитывать конкретные требования вашего приложения и его
                    функциональности.
                </p>
                <h3>Session Storage</h3>
                <p>
                    <b>Session Storage</b> - это еще один механизм хранения данных в браузере, который работает так же,
                    как и
                    LocalStorage. Однако Session Storage имеет ряд отличий от LocalStorage.
                </p>
                <p>
                    <b>Session Storage сохраняет данные только на время сеанса браузера</b>. Это означает, что данные
                    будут
                    удалены после закрытия браузера или вкладки. Это может быть полезно для хранения временных данных,
                    таких как формы, которые не нужно сохранять после закрытия браузера.
                </p>
                <p>
                    Кроме того, Session Storage имеет более ограниченный объем хранения данных, чем LocalStorage. Это
                    означает, что он может быть полезен для хранения небольших объемов данных, которые нужно сохранить
                    только на время сеанса браузера.
                </p>
                <p><b>СИНТАКСИС ТАКОЙ ЖЕ КАК И У LocalStorage</b></p>
                <p>
                    Использование Session Storage может помочь улучшить пользовательский опыт, позволяя сохранять
                    временные данные между переходами на разные страницы сайта.
                </p>
                <h3>localForage</h3>
                <p>
                    <b>localForage</b> - это JavaScript-библиотека, предоставляющая удобный асинхронный интерфейс для работы с
                    локальными хранилищами в браузерах. Эта библиотека позволяет сохранять данные в браузере
                    пользователя, используя различные хранилища, такие как IndexedDB, WebSQL и localStorage, в
                    зависимости от поддержки браузера.
                </p>
                <p>
                    <b>Ссылка</b> на описание → <a href='https://www.npmjs.com/package/localforage' target={"_blank"}>https://www.npmjs.com/package/localforage</a>
                </p>
            </div>
        </div>
    );
};

export default Storages;