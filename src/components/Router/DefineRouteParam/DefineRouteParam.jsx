import React from 'react';
import {codeDefRouteParam, codeExampleRouteParam, codeUseRouteParam} from "../code_examples";
import Code from "../../Code/Code";

const DefineRouteParam = () => {
    return (
        <div style={{border: '1px solid #fff', padding: '20px'}}>
            <p><b>Определение параметров маршрутов</b></p>
            <p>
                Чтобы определить параметр маршрута, мы используем двоеточие (<b>:</b>) перед именем параметра в пути
                маршрута.
            </p>
            <p>
                <Code code={codeDefRouteParam}/>
            </p>
            <p>
                В этом примере мы определяем маршрут <b>"/users/:id"</b>, где <b>:id</b> является параметром
                маршрута. Значение
                этого параметра будет динамически меняться в зависимости от выбранного пользователя.
            </p>
            <p><b>Использование параметров маршрутов</b></p>
            <p>
                Для доступа к значению параметра маршрута мы можем использовать хук <b>useParams()</b>. Он позволяет
                нам
                получить объект с значениями всех параметров маршрута.
            </p>
            <p>
                <Code code={codeUseRouteParam}/>
            </p>
            <p>
                В этом примере мы используем <b>useParams()</b> для получения значения параметра <b>id</b>. Затем мы
                можем
                использовать это значение внутри компонента <b>UserDetailPage</b>, например, для отображения деталей
                пользователя с указанным идентификатором.
            </p>
            <p><b>Пример использования параметров маршрутов</b></p>
            <p>
                <Code code={codeExampleRouteParam}/>
            </p>
            <p>
                В этом примере мы определяем два маршрута, где каждый имеет свой параметр: <b>id</b> для пользователей и
                <b>productId</b> для продуктов. Мы связываем эти маршруты с соответствующими компонентами, которые будут
                отображаться при совпадении маршрутов.
            </p>
        </div>
    );
};

export default DefineRouteParam;