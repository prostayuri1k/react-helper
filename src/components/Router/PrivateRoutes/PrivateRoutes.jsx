import React from 'react';
import Code from "../../Code/Code";
import {codePrivateRoutes1, codePrivateRoutes2} from "../code_examples";

const PrivateRoutes = () => {
    return (
        <div style={{border: '1px solid #fff', padding: '20px'}}>
            <p><b>PrivateRoute: Защита маршрутов</b></p>
            <p>
                В некоторых случаях может потребоваться ограничить доступ к определенным маршрутам и дать доступ к ним
                только для аутентифицированных пользователей. Для этого можно создать компонент <b>PrivateRoute</b>,
                который
                будет проверять статус аутентификации пользователя и редиректить его в случае необходимости.
            </p>
            <p><b>Создание компонента PrivateRoute</b></p>
            <p>
                Для создания компонента <b>PrivateRoute</b> можно воспользоваться компонентом <b>Route</b> из React
                Router Dom v6 и
                добавить логику проверки аутентификации.
            </p>
            <p>
                <Code code={codePrivateRoutes1}/>
            </p>
            <p>
                В этом примере <b>PrivateRoute</b> проверяет аутентифицирован ли пользователь. Например проверит наличие
                token
                в LocalStorage. Если пользователь аутентифицирован,
                компонент <b>PrivateRoute</b> отображает <b>Route</b> с
                переданными пропсами, в противном случае происходит редирект на страницу входа с помощью
                компонента <b>Navigate</b>.
            </p>
            <p><b>Использование компонента PrivateRoute</b></p>
            <p>
                Теперь можно использовать компонент <b>PrivateRoute</b> для защиты маршрутов, доступных только для
                аутентифицированных пользователей.
            </p>
            <p>
                <Code code={codePrivateRoutes2}/>
            </p>
            <p>
                В этом примере используется <b>PrivateRoute</b> для маршрута "/dashboard". Если пользователь не
                аутентифицирован, он будет перенаправлен на страницу входа "/login". Если пользователь аутентифицирован,
                он получит доступ к защищенному маршруту "/dashboard".
            </p>
        </div>
    );
};

export default PrivateRoutes;