import React from 'react';
import Code from "../../Code/Code";
import {codeNestedRoutes1, codeNestedRoutes2} from "../code_examples";

const NestedRoutes = () => {
    return (
        <div style={{border: '1px solid #fff', padding: '20px'}}>
            <p>
                В некоторых случаях нам нужно создать иерархию маршрутов, где определенные маршруты будут вложены в
                другие. Например, мы можем иметь главную страницу, на которой есть навигационное меню, и каждый пункт
                меню будет отображать свой собственный подмаршрут.
            </p>
            <p><b>Определение вложенных маршрутов</b></p>
            <p>
                Для создания вложенных маршрутов мы используем компонент <b>Routes</b> и определяем внутри него другие
                компоненты <b>Route</b>. Вложенные <b>Route</b> должны быть вложены в соответствующий родительский
                маршрут.
            </p>
            <p>
                <Code code={codeNestedRoutes1}/>
            </p>
            <p>
                В этом примере у нас есть родительский маршрут "/products", который содержит два вложенных маршрута: "/"
                и "/:id". При переходе на путь "/products" будет отображаться компонент <b>ProductsPage</b>, а при
                переходе на
                путь "/products/:id" будет отображаться компонент <b>ProductDetail</b>.
            </p>
            <p><b>Использование вложенных маршрутов</b></p>
            <p>
                Для использования вложенных маршрутов внутри компонента ProductsPage мы используем
                компонент <b>Outlet</b>.
                <br/>
                <br/>
                <b>Outlet</b> определяет место, где будут отображаться вложенные маршруты.
            </p>
            <p>
                <Code code={codeNestedRoutes2}/>
            </p>
            <p>
                В этом примере компонент <b>ProductsPage</b> содержит ссылки на различные продукты. Компонент Outlet определяет
                место, где будут отображаться вложенные маршруты, т.е. компоненты <b>{`<AllProducts/>`}</b> и <b>{
                `<ProductDetail/>`}</b> в
                нашем случае.
            </p>
        </div>
    );
};

export default NestedRoutes;